name: Publish Bots Docker image

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  buildBotx64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: DATABASE_URL=${{ secrets.DATABASE_URL }}

      - name: Send POST request to auto-refresh
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.PORTAINER_WEBHOOK }}
          method: 'POST'
          preventFailureOnNoResponse: true
          
      # - name: Send POST request to auto-refresh
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: ${{ secrets.COOLIFY_WEBHOOK }}
      #     method: 'GET'
      #     customHeaders: '{"Authorization": "Bearer ${{ secrets.COOLIFY_TOKEN }}"}'
      #     preventFailureOnNoResponse: true
